/*
 * HLSMediaSourceAdapter.cpp
 *
 *  Created on: May 2, 2014
 *      Author: Mark
 */

#include "constants.h"
#include "debug.h"


using namespace std;
using namespace android;


HLSMediaSourceAdapter::HLSMediaSourceAdapter()
{

}

HLSMediaSourceAdapter::~HLSMediaSourceAdapter()
{
	mCurrentSource->stop();
	while (mSources.size() > 0)
	{
		mCurrentSource = mSources.front();
		mCurrentSource->stop();
		mSources.pop_front();
	}
}


void HLSMediaSourceAdapter::append(sp<MediaSource> source)
{
	mSources.push_back(source);
}

status_t HLSMediaSourceAdapter::start(android::MetaData * params /* = NULL */)
{
	if (mSources.size() == 0) return INVALID_OPERATION;
	mCurrentSource = mSources.front();
	mSources.pop_front();

	return mCurrentSource->start(params);
}

status_t HLSMediaSourceAdapter::stop()
{
	status_t res = mCurrentSource->stop();
	return res;
}

sp<MetaData> HLSMediaSourceAdapter::getFormat()
{
	sp<MetaData> meta = mCurrentSource->getFormat();
	return meta;
}

status_t HLSMediaSourceAdapter::read(MediaBuffer **buffer, const ReadOptions *options /* = NULL*/)
{
	status_t res = mCurrentSource->read(buffer, options);
	return res;
}

status_t HLSMediaSourceAdapter::pause()
{
	status_t res = mCurrentSource->pause();
	return res;
}

// from MediaBufferObserver
void HLSMediaSourceAdapter::signalBufferReturned(MediaBuffer *buffer)
{
	((MediaBufferObserver)mCurrentSource.get())->signalBufferReturned(buffer);
}

